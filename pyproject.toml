[project]
name = "tkseal"
version = "1.0.0"
requires-python = ">=3.12"

[tool.poetry]
version = "1.0.0"
description = "A command-line utility for managing sealed secrets in Kubernetes environments using Grafana Tanka configuration repositories"
readme = "README.md"
authors = ["K'Ron Spar <kspar@umich.edu>", "Lianet Sepulveda Torres <lisepul@umich.edu>"]
packages = [{include = "tkseal", from = "src"}]
keywords = ["kubernetes", "secrets", "sealed-secrets", "tanka", "k8s"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Runtime dependencies
[tool.poetry.dependencies]
python = ">=3.12"
click = ">=8.1.0"
pyyaml = ">=6.0"

# Development dependencies
[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.15.1"
ruff = "^0.8.0"
mypy = "^1.13.0"
types-pyyaml = "^6.0.0"

[tool.poetry.scripts]
  tkseal = "tkseal.cli:main"

[build-system]
requires = ["poetry-core>=2.1.1"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88
src = ["src", "tests"]

# New in Ruff 0.0.241 and later
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

# Ruff can format now, so we don't need to run black separately
[tool.ruff.format]
  quote-style = "double"
  indent-style = "space"
  line-ending = "auto"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/tkseal",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml", # Added for CI/CD coverage reporting
]

[tool.coverage.run]
  source = ["src"]
  omit = [
      "tests/*",
  ]

[tool.coverage.report]
  exclude_lines = [
      "pragma: no cover",
      "def __repr__",
      "raise AssertionError",
      "raise NotImplementedError",
      "if __name__ == .__main__.:",
      "if TYPE_CHECKING:",
  ]