[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tkseal"
version = "1.0.0"
description = "A command-line utility for managing sealed secrets in Kubernetes environments using Grafana Tanka configuration repositories"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
authors = [
    {name = "TKSeal Contributors"}
]
keywords = ["kubernetes", "secrets", "sealed-secrets", "tanka", "k8s"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.0"
pyyaml ="^6.0"


[tool.poetry.group.dev.dependencies]  # âœ… Modern and recommended
pytest = "^8.3"
pytest-cov = "^4.1"
black = "^24.8"
mypy = "^1.10"
ruff = "^0.5"
types-pyyaml = "^6.0"


[project.scripts]
tkseal = "tkseal.cli:main"

[project.urls]
Homepage = "https://github.com/mlibrary/tkseal"
Repository = "https://github.com/mlibrary/tkseal"
Issues = "https://github.com/mlibrary/tkseal/issues"

[tool.hatch.version]
path = "src/tkseal/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/tkseal"]

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert in tests

[tool.black]
target-version = ["py312"]
line-length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tkseal",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]